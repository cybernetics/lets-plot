.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_plot_geom_boxplot.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_plot_geom_boxplot.py:


Geom Boxplot
============


.. code-block:: default


    import numpy as np

    from lets_plot import *
    LetsPlot.setup_html()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    WARN: Embedding Lets-Plot JS library for offline usage is not supported.





.. code-block:: default



    np.random.seed(42)
    n = 100
    data = {'y': np.random.normal(size=n), \
            'class': np.random.randint(5, size=n)}









.. code-block:: default


    ggplot(data, aes(x='class', y='y')) + \
        geom_boxplot(aes(fill='class', color='class'), alpha=.5) + \
        scale_color_discrete() + scale_fill_discrete()




.. raw:: html

    <html lang="en">
       <head>
           <script type="text/javascript" data-lets-plot-script="library" src="https://dl.bintray.com/jetbrains/lets-plot/lets-plot-latest.min.js"></script>
       </head>
       <body>
              <div id="HzS90i"></div>
       <script type="text/javascript" data-lets-plot-script="plot">
           var plotSpec={
    'data':{
    },
    'mapping':{
    'x':"class",
    'y':"y"
    },
    'data_meta':{
    },
    'kind':"plot",
    'scales':[{
    'aesthetic':"color",
    'discrete':true
    },{
    'aesthetic':"fill",
    'discrete':true
    }],
    'layers':[{
    'geom':"boxplot",
    'mapping':{
    'fill':"class",
    'color':"class"
    },
    'data_meta':{
    },
    'alpha':0.5,
    'data':{
    '..middle..':[0.19011593809736294,NaN,-0.13826430117118466,-0.39210815313215763,NaN,NaN,NaN,-0.23415337472333597,NaN,NaN,0.08704706823817121],
    '..lower..':[-0.4712959653288761,NaN,-0.6017066122293969,-0.6513458918980787,NaN,NaN,NaN,-0.6451197546051243,NaN,NaN,-0.5230698840548595],
    '..upper..':[0.5279137383496604,NaN,0.11092258970986608,0.9130389049976066,NaN,NaN,NaN,0.06752820468792384,NaN,NaN,0.3526271573080478],
    '..ymin..':[-1.4635149481321186,NaN,-0.7198442083947086,-1.9875689146008928,NaN,NaN,NaN,-1.4247481862134568,NaN,NaN,-1.3281860488984305],
    '..ymax..':[1.5646436558140062,NaN,0.3142473325952739,1.5792128155073915,NaN,NaN,NaN,0.9755451271223592,NaN,NaN,1.5380365664659692],
    '..group..':[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],
    'class':[0.0,4.0,4.0,2.0,1.0,1.0,1.0,1.0,3.0,3.0,3.0],
    'y':[NaN,-1.9596701238797756,NaN,NaN,-1.7249178325130328,1.356240028570823,-2.6197451040897444,NaN,-1.913280244657798,1.8522781845089378,NaN]
    }
    }]
    };
           var plotContainer = document.getElementById("HzS90i");
           LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer);
       </script>
       </body>
    </html>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.006 seconds)


.. _sphx_glr_download_gallery_plot_geom_boxplot.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_geom_boxplot.py <plot_geom_boxplot.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_geom_boxplot.ipynb <plot_geom_boxplot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
